{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ammonwarnick/Desktop/Sedare/customComponents/Checkbox.js\";\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar Checkbox = function Checkbox(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isChecked = _React$useState2[0],\n      setIsChecked = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"flex-start\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      position = _React$useState4[0],\n      setPosition = _React$useState4[1];\n\n  var _React$useState5 = React.useState(new Animated.Value(0)),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      marginLeft = _React$useState6[0],\n      setMarginLeft = _React$useState6[1];\n\n  var _React$useState7 = React.useState(new Animated.Value(0)),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      backgroundColor = _React$useState8[0],\n      setBackgroundColor = _React$useState8[1];\n\n  var turnOn = function turnOn() {\n    setIsChecked(true);\n    props.turnOn();\n  };\n\n  var turnOff = function turnOff() {\n    setIsChecked(false);\n    props.turnOff();\n  };\n\n  var borderColor = isChecked ? props.activeBorderColor : props.inactiveBorderColor;\n  return React.createElement(Animated.View, {\n    style: [props.checkboxContainer, {\n      borderColor: borderColor,\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }],\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return true;\n    },\n    onResponderGrant: function onResponderGrant() {},\n    onResponderRelease: function onResponderRelease() {\n      if (isChecked) {\n        turnOff();\n      } else {\n        turnOn();\n      }\n    },\n    onStartShouldSetResponderCapture: function onStartShouldSetResponderCapture() {\n      return true;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, isChecked && React.createElement(View, {\n    style: props.check ? props.check : [{\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100%\",\n      backgroundColor: \"green\",\n      transform: [{\n        translateX: 0\n      }, {\n        translateY: 0\n      }],\n      left: 0,\n      top: 0\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Checkbox;","map":{"version":3,"sources":["/Users/ammonwarnick/Desktop/Sedare/customComponents/Checkbox.js"],"names":["React","Checkbox","props","useState","isChecked","setIsChecked","position","setPosition","Animated","Value","marginLeft","setMarginLeft","backgroundColor","setBackgroundColor","turnOn","turnOff","borderColor","activeBorderColor","inactiveBorderColor","checkboxContainer","display","flexDirection","alignItems","justifyContent","check","width","height","transform","translateX","translateY","left","top"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAE1B,wBAAkCF,KAAK,CAACG,QAAN,CAAe,KAAf,CAAlC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,yBAAgCL,KAAK,CAACG,QAAN,CAAe,YAAf,CAAhC;AAAA;AAAA,MAAOG,QAAP;AAAA,MAAiBC,WAAjB;;AACA,yBAAoCP,KAAK,CAACG,QAAN,CAAe,IAAIK,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAf,CAApC;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,yBAA8CX,KAAK,CAACG,QAAN,CAAe,IAAIK,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAf,CAA9C;AAAA;AAAA,MAAOG,eAAP;AAAA,MAAwBC,kBAAxB;;AACA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBT,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAH,IAAAA,KAAK,CAACY,MAAN;AACD,GAHD;;AAKA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBV,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAH,IAAAA,KAAK,CAACa,OAAN;AACD,GAHD;;AAKA,MAAMC,WAAW,GAAGZ,SAAS,GAAGF,KAAK,CAACe,iBAAT,GAA6Bf,KAAK,CAACgB,mBAAhE;AAEA,SACI,oBAAC,QAAD,CAAU,IAAV;AACE,IAAA,KAAK,EAAE,CAAChB,KAAK,CAACiB,iBAAP,EAA0B;AAACH,MAAAA,WAAW,EAAXA,WAAD;AAAcI,MAAAA,OAAO,EAAE,MAAvB;AAA+BC,MAAAA,aAAa,EAAE,KAA9C;AAAqDC,MAAAA,UAAU,EAAE,QAAjE;AAA2EC,MAAAA,cAAc,EAAE;AAA3F,KAA1B,CADT;AAEE,IAAA,yBAAyB,EAAI,qCAAM;AAAC,aAAO,IAAP;AAAY,KAFlD;AAGE,IAAA,gBAAgB,EAAI,4BAAM,CAAE,CAH9B;AAGgC,IAAA,kBAAkB,EAAI,8BAAM;AACxD,UAAInB,SAAJ,EAAc;AACZW,QAAAA,OAAO;AACR,OAFD,MAEO;AACLD,QAAAA,MAAM;AACP;AACF,KATH;AAUE,IAAA,gCAAgC,EAAI;AAAA,aAAM,IAAN;AAAA,KAVtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGV,SAAS,IACV,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,KAAK,CAACsB,KAAN,GAActB,KAAK,CAACsB,KAApB,GAA4B,CAAC;AACxClB,MAAAA,QAAQ,EAAE,UAD8B;AAExCmB,MAAAA,KAAK,EAAE,MAFiC;AAGxCC,MAAAA,MAAM,EAAE,MAHgC;AAIxCd,MAAAA,eAAe,EAAE,OAJuB;AAKxCe,MAAAA,SAAS,EAAE,CACT;AAACC,QAAAA,UAAU,EAAE;AAAb,OADS,EAET;AAACC,QAAAA,UAAU,EAAE;AAAb,OAFS,CAL6B;AASxCC,MAAAA,IAAI,EAAE,CATkC;AAUxCC,MAAAA,GAAG,EAAE;AAVmC,KAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADJ;AA+BD,CAlDD;;AAqDA,eAAe9B,QAAf","sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet, Animated, Button } from 'react-native';\n\n\nconst Checkbox = (props) => {\n  \n  const [isChecked, setIsChecked] = React.useState(false);\n  const [position, setPosition] = React.useState(\"flex-start\");\n  const [marginLeft, setMarginLeft] = React.useState(new Animated.Value(0));\n  // let marginRight = 5;\n  const [backgroundColor, setBackgroundColor] = React.useState(new Animated.Value(0));\n  const turnOn = () => {\n    setIsChecked(true);\n    props.turnOn();\n  }\n\n  const turnOff = () => {\n    setIsChecked(false);\n    props.turnOff();\n  }\n\n  const borderColor = isChecked ? props.activeBorderColor : props.inactiveBorderColor;\n\n  return (\n      <Animated.View\n        style={[props.checkboxContainer, {borderColor, display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"center\"}]}\n        onStartShouldSetResponder = {() => {return true}}\n        onResponderGrant = {() => {}} onResponderRelease = {() => {\n          if (isChecked){\n            turnOff();\n          } else {\n            turnOn();\n          }\n        }} \n        onStartShouldSetResponderCapture = {() => true}\n       >\n       {\n         isChecked &&\n        <View style={props.check ? props.check : [{\n          position: \"relative\",\n          width: \"100%\",\n          height: \"100%\",\n          backgroundColor: \"green\",\n          transform: [\n            {translateX: 0},\n            {translateY: 0},\n\t        ],\n          left: 0,\n          top: 0\n        }]}>\n        </View>\n       }\n      </Animated.View>\n  );\n}\n\n\nexport default Checkbox;"]},"metadata":{},"sourceType":"module"}