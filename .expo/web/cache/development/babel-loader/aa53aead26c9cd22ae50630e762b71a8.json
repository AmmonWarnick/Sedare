{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/ammonwarnick/Desktop/Sedare/customComponents/Select.js\";\n\nimport React from 'react';\nimport RNPickerSelect from 'react-native-picker-select';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nexport var Select = function Select(props) {\n  var pickerStyle = props.pickerStyle,\n      items = props.items,\n      pickerValue = props.pickerValue,\n      setPickerValue = props.setPickerValue;\n  var selectItems = items.map(function (item) {\n    return {\n      label: item,\n      value: item\n    };\n  });\n  return React.createElement(View, {\n    style: {\n      height: \"100%\",\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(RNPickerSelect, {\n    useNativeAndroidPickerStyle: false,\n    style: {\n      placeholder: {\n        color: \"black\",\n        marginLeft: 10\n      },\n      viewContainer: {\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        backgroundColor: \"transparent\",\n        width: \"100%\",\n        height: \"100%\"\n      },\n      inputIOS: {\n        backgroundColor: \"transparent\",\n        color: \"transparent\",\n        width: \"100%\",\n        height: \"100%\",\n        border: \"none\"\n      },\n      inputWeb: {\n        backgroundColor: \"transparent\",\n        color: \"transparent\",\n        border: \"none\",\n        width: \"100%\",\n        height: \"100%\"\n      },\n      inputAndroid: {\n        backgroundColor: \"transparent\",\n        color: \"transparent\",\n        width: \"100%\",\n        height: \"100%\",\n        border: \"none\"\n      }\n    },\n    value: pickerValue,\n    onValueChange: function onValueChange(value) {\n      return setPickerValue(value);\n    },\n    items: selectItems,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/ammonwarnick/Desktop/Sedare/customComponents/Select.js"],"names":["React","RNPickerSelect","Select","props","pickerStyle","items","pickerValue","setPickerValue","selectItems","map","item","label","value","height","width","placeholder","color","marginLeft","viewContainer","position","left","top","backgroundColor","inputIOS","border","inputWeb","inputAndroid"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;;;AAIA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAI/B,MAEEC,WAFF,GAMID,KANJ,CAEEC,WAFF;AAAA,MAGEC,KAHF,GAMIF,KANJ,CAGEE,KAHF;AAAA,MAIEC,WAJF,GAMIH,KANJ,CAIEG,WAJF;AAAA,MAKEC,cALF,GAMIJ,KANJ,CAKEI,cALF;AAQA,MAAMC,WAAW,GAAGH,KAAK,CAACI,GAAN,CAAU,UAAAC,IAAI,EAAI;AACpC,WAAO;AACLC,MAAAA,KAAK,EAAED,IADF;AAELE,MAAAA,KAAK,EAAEF;AAFF,KAAP;AAID,GALmB,CAApB;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACG,MAAAA,MAAM,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAEA,IAAA,2BAA2B,EAAE,KAF7B;AAGM,IAAA,KAAK,EAAE;AACLC,MAAAA,WAAW,EAAE;AACXC,QAAAA,KAAK,EAAE,OADI;AAEXC,QAAAA,UAAU,EAAE;AAFD,OADR;AAKLC,MAAAA,aAAa,EAAE;AACbC,QAAAA,QAAQ,EAAE,UADG;AAEbC,QAAAA,IAAI,EAAE,CAFO;AAGbC,QAAAA,GAAG,EAAE,CAHQ;AAIbC,QAAAA,eAAe,EAAE,aAJJ;AAKbR,QAAAA,KAAK,EAAE,MALM;AAMbD,QAAAA,MAAM,EAAE;AANK,OALV;AAcLU,MAAAA,QAAQ,EAAE;AACRD,QAAAA,eAAe,EAAE,aADT;AAERN,QAAAA,KAAK,EAAE,aAFC;AAGRF,QAAAA,KAAK,EAAE,MAHC;AAIRD,QAAAA,MAAM,EAAE,MAJA;AAKRW,QAAAA,MAAM,EAAE;AALA,OAdL;AAqBLC,MAAAA,QAAQ,EAAE;AACRH,QAAAA,eAAe,EAAE,aADT;AAERN,QAAAA,KAAK,EAAE,aAFC;AAGRQ,QAAAA,MAAM,EAAE,MAHA;AAIRV,QAAAA,KAAK,EAAE,MAJC;AAKRD,QAAAA,MAAM,EAAE;AALA,OArBL;AA4BLa,MAAAA,YAAY,EAAE;AACZJ,QAAAA,eAAe,EAAE,aADL;AAEZN,QAAAA,KAAK,EAAE,aAFK;AAGZF,QAAAA,KAAK,EAAE,MAHK;AAIZD,QAAAA,MAAM,EAAE,MAJI;AAKZW,QAAAA,MAAM,EAAE;AALI;AA5BT,KAHb;AAuCM,IAAA,KAAK,EAAElB,WAvCb;AAwCM,IAAA,aAAa,EAAE,uBAACM,KAAD;AAAA,aAAWL,cAAc,CAACK,KAAD,CAAzB;AAAA,KAxCrB;AAyCM,IAAA,KAAK,EAAEJ,WAzCb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAgDD,CAnEM","sourcesContent":["import React from 'react';\nimport RNPickerSelect from 'react-native-picker-select';\nimport {StyleSheet, View} from 'react-native'\n\n\nexport const Select = (props) => {\n\n  // const [valu]\n\n  const {\n    // height,\n    pickerStyle,\n    items,\n    pickerValue,\n    setPickerValue\n  } = props;\n\n  const selectItems = items.map(item => {\n    return {\n      label: item,\n      value: item\n    }\n  })\n\n  return (\n    <View style={{height: \"100%\", width: \"100%\"}}>\n      <RNPickerSelect\n        // style={{height: \"100%\"}}\n      useNativeAndroidPickerStyle={false}\n            style={{\n              placeholder: {\n                color: \"black\",\n                marginLeft: 10\n              },\n              viewContainer: {\n                position: \"absolute\",\n                left: 0,\n                top: 0,\n                backgroundColor: \"transparent\",\n                width: \"100%\",\n                height: \"100%\",\n\n              },\n              inputIOS: {\n                backgroundColor: \"transparent\",\n                color: \"transparent\",\n                width: \"100%\",\n                height: \"100%\",\n                border: \"none\",\n              },\n              inputWeb: {\n                backgroundColor: \"transparent\",\n                color: \"transparent\",\n                border: \"none\",\n                width: \"100%\",\n                height: \"100%\"\n              },\n              inputAndroid: {\n                backgroundColor: \"transparent\",\n                color: \"transparent\",\n                width: \"100%\",\n                height: \"100%\",\n                border: \"none\",\n              }\n            }}\n            value={pickerValue}\n            onValueChange={(value) => setPickerValue(value)}\n            items={selectItems}\n        />\n        </View>\n  )\n\n}"]},"metadata":{},"sourceType":"module"}