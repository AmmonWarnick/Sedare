{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ammonwarnick/Desktop/Sedare/customComponents/SwitchSZ.js\";\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\n\nvar SwitchSZ = function SwitchSZ(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isSwitched = _React$useState2[0],\n      setIsSwitched = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"flex-start\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      position = _React$useState4[0],\n      setPosition = _React$useState4[1];\n\n  var _React$useState5 = React.useState(new Animated.Value(0)),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      marginLeft = _React$useState6[0],\n      setMarginLeft = _React$useState6[1];\n\n  var _React$useState7 = React.useState(new Animated.Value(0)),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      backgroundColor = _React$useState8[0],\n      setBackgroundColor = _React$useState8[1];\n\n  var turnOn = function turnOn() {\n    setIsSwitched(true);\n    Animated.timing(backgroundColor, {\n      toValue: 1,\n      duration: 100,\n      useNativeDriver: false\n    }).start();\n    Animated.timing(marginLeft, {\n      toValue: 1,\n      duration: 100,\n      useNativeDriver: false\n    }).start();\n    props.turnOn();\n    Vibration.vibrate(1000);\n  };\n\n  var turnOff = function turnOff() {\n    setIsSwitched(false);\n    Animated.timing(backgroundColor, {\n      toValue: 0,\n      duration: 100,\n      useNativeDriver: false\n    }).start();\n    Animated.timing(marginLeft, {\n      toValue: 0,\n      duration: 100,\n      useNativeDriver: false\n    }).start();\n    props.turnOff();\n  };\n\n  var boxInterpolation = marginLeft.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, props.width - props.sliderWidth - props.horizontalPadding]\n  });\n  var color = backgroundColor.interpolate({\n    inputRange: [0, 1],\n    outputRange: [props.backgroundColor, props.activeBackgroundColor]\n  });\n  return React.createElement(Animated.View, {\n    style: [props.switchContainer, {\n      backgroundColor: color,\n      justifyContent: \"center\"\n    }],\n    onStartShouldSetResponder: function onStartShouldSetResponder() {\n      return true;\n    },\n    onResponderGrant: function onResponderGrant() {},\n    onResponderRelease: function onResponderRelease() {\n      if (isSwitched) {\n        turnOff();\n      } else {\n        turnOn();\n      }\n    },\n    onStartShouldSetResponderCapture: function onStartShouldSetResponderCapture() {\n      return true;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, React.createElement(Animated.View, {\n    style: [props.slider ? props.slider : {\n      backgroundColor: \"white\",\n      borderRadius: props.sliderWidth / 2\n    }, {\n      position: \"relative\",\n      height: props.sliderHeight,\n      width: props.sliderWidth,\n      marginLeft: boxInterpolation,\n      left: 0,\n      top: 0,\n      transform: [{\n        translateX: 0\n      }, {\n        translateY: 0\n      }]\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default SwitchSZ;","map":{"version":3,"sources":["/Users/ammonwarnick/Desktop/Sedare/customComponents/SwitchSZ.js"],"names":["React","SwitchSZ","props","useState","isSwitched","setIsSwitched","position","setPosition","Animated","Value","marginLeft","setMarginLeft","backgroundColor","setBackgroundColor","turnOn","timing","toValue","duration","useNativeDriver","start","Vibration","vibrate","turnOff","boxInterpolation","interpolate","inputRange","outputRange","width","sliderWidth","horizontalPadding","color","activeBackgroundColor","switchContainer","justifyContent","slider","borderRadius","height","sliderHeight","left","top","transform","translateX","translateY"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet, Animated, Button, Vibration } from 'react-native';\n\n\nconst SwitchSZ = (props) => {\n  \n  const [isSwitched, setIsSwitched] = React.useState(false);\n  const [position, setPosition] = React.useState(\"flex-start\");\n  const [marginLeft, setMarginLeft] = React.useState(new Animated.Value(0));\n  // let marginRight = 5;\n  const [backgroundColor, setBackgroundColor] = React.useState(new Animated.Value(0));\n  const turnOn = () => {\n    setIsSwitched(true);\n    Animated.timing(\n      backgroundColor,\n      {\n        toValue: 1,\n        duration: 100,\n        useNativeDriver: false,\n      }\n    ).start();\n    Animated.timing(\n      marginLeft,\n      {\n        toValue: 1,\n        duration: 100,\n        useNativeDriver: false,\n      }\n    ).start();\n    props.turnOn();\n    Vibration.vibrate(1000);\n  }\n\n  const turnOff = () => {\n    setIsSwitched(false);\n    Animated.timing(\n      backgroundColor,\n      {\n        toValue: 0,\n        duration: 100,\n        useNativeDriver: false,\n      }\n    ).start();\n    Animated.timing(\n      marginLeft,\n      {\n        toValue: 0,\n        duration: 100,\n        useNativeDriver: false,\n      }\n    ).start();\n    props.turnOff();\n  }\n\n\n  const boxInterpolation =  marginLeft.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0 , props.width-props.sliderWidth-props.horizontalPadding]\n  })\n\n\n  const color =  backgroundColor.interpolate({\n    inputRange: [0, 1],\n    outputRange:[props.backgroundColor , props.activeBackgroundColor]\n  })\n  return (\n      <Animated.View\n        style={[props.switchContainer, {backgroundColor: color, justifyContent: \"center\"}]}\n        onStartShouldSetResponder = {() => {return true}}\n        onResponderGrant = {() => {}} onResponderRelease = {() => {\n          if (isSwitched){\n            turnOff();\n          } else {\n            turnOn();\n          }\n        }} \n        onStartShouldSetResponderCapture = {() => true}\n       >\n        <Animated.View \n          style=\n          {[props.slider ? props.slider : {backgroundColor: \"white\", borderRadius: props.sliderWidth/2}, \n            {\n              position: \"relative\", \n              height: props.sliderHeight, \n              width: props.sliderWidth,\n              marginLeft: boxInterpolation,\n              left: 0,\n              top: 0,\n              transform: [\n                {translateX: 0},\n                {translateY: 0}\n              ]\n            }\n          ]}\n    \n          ></Animated.View>\n      </Animated.View>\n  );\n}\n\nexport default SwitchSZ;\n\n"]},"metadata":{},"sourceType":"module"}